Comment: Manages delegation of DNS subdomains to an account.
StartAt: Collect Domain Data
States:
  Collect Domain Data:
    Type: Task
    Resource: '${CollectDomainDataFunctionArn}'
    Parameters:
      account_id: '${NetworkingAccountId}'
    ResultPath: $.domains
    Retry:
      - ErrorEquals:
          - States.TaskFailed
        IntervalSeconds: 5
        MaxAttempts: 5
        BackoffRate: 5
    Next: Collect Subdomain Data

  Collect Subdomain Data:
    Type: Task
    Resource: '${CollectDomainDataFunctionArn}'
    Parameters:
      account_id.$: $.account_id
    ResultPath: $.subdomains
    Retry:
      - ErrorEquals:
          - States.TaskFailed
        IntervalSeconds: 5
        MaxAttempts: 5
        BackoffRate: 5
    Next: Determine Extent of Changes

  Determine Extent of Changes:
    Type: Task
    Resource: '${DetermineExtentOfChangesFunctionArn}'
    Retry:
      - ErrorEquals:
          - States.TaskFailed
        IntervalSeconds: 5
        MaxAttempts: 5
        BackoffRate: 5
    Next: Create Delegations

  Create Delegations:
    Type: Map
    ItemsPath: $.create
    MaxConcurrency: 1
    Parameters:
      domain_data.$: $$.Map.Item.Value
      domains.$: $.domains
      subdomains.$: $.subdomains
    ResultPath: null
    Iterator:
      StartAt: Create Delegation
      States:
          Create Delegation:
              Type: Task
              Resource: '${CreateDelegationFunctionArn}'
              ResultPath: null
              Retry:
                -
                  ErrorEquals:
                    - States.TaskFailed
                  IntervalSeconds: 5
                  MaxAttempts: 5
                  BackoffRate: 5
              End: true

    End: true
